/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.24
 * Generated at: 2016-09-01 21:43:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.nfl;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import bg.nfl.utilities.Player;
import bg.nfl.utilities.StatFields;

public final class setup_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("bg.nfl.utilities.StatFields");
    _jspx_imports_classes.add("bg.nfl.utilities.Player");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<html>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/header.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<body align=\"left\">\n");
      out.write("\t<div class=\"container\">\n");
      out.write("\t\t<div class=\"well\">Setup the table you want to have generated.\n");
      out.write("\t\t\tChecking a field specifies that you want to view that field. The text\n");
      out.write("\t\t\tbox allows you to specify how many fantasy points one point of the\n");
      out.write("\t\t\tspecified metric will award you. Example: For the TD field, if you\n");
      out.write("\t\t\tare rewarded 6 points, put 6 in the text box. For the Yards field, if\n");
      out.write("\t\t\t10 yards is a point, put 0.1 in the text box.</div>\n");
      out.write("\t</div>\n");
      out.write("\t<div class=\"container\">\n");
      out.write("\t\t<form id=\"setup-form\" action=\"/nfl/display_stats\" method=\"post\">\n");
      out.write("\t\t\t");

				ArrayList<StatFields> columnNames = Player.getPlayerStatFields();
				if(columnNames == null){
					
      out.write("\n");
      out.write("\t\t\t\t\t<p>Page still initializing, please try again in a moment.</p>\n");
      out.write("\t\t\t\t\t");

					columnNames = new ArrayList<StatFields>();
				}
				String category = "";
				int categoryCounter = 0;
				for (int i = 0; i < columnNames.size(); i++) {
					StatFields col = columnNames.get(i);
					String[] cleanedValue = StatFields.cleanValue(col.value);
					String newCategory = cleanedValue[0];
					String attribute = cleanedValue[1];
					if (newCategory.equals("Name") || newCategory.equals("Number")
							|| newCategory.equals("Year")) {
						continue;
					}

					if (categoryCounter == 0) {
						categoryCounter++;
						
      out.write("\n");
      out.write("\t\t\t\t\t\t<div class=\"row\">\n");
      out.write("\t\t\t\t\t\t<div class=\"col-md-3\">\n");
      out.write("\t\t\t\t\t\t");

					}

					if (attribute.equals("N/A")) { // For 'Team', 'Position', 'College'
						
      out.write("\n");
      out.write("\t\t\t\t\t\t<div class=\"row\">\n");
      out.write("\t\t\t\t\t\t\t<div class=\"checkbox\">\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"");
      out.print(col.value);
      out.write("\" />");
      out.print(newCategory);
      out.write("</div>\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t");

					}
					else{
						if (!category.equals(newCategory)) {
							category = newCategory;
							categoryCounter++;
							
      out.write("\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t");

							if (categoryCounter-1 % 4 == 0) {
								
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t\t\t<br/>\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"row\">\n");
      out.write("\t\t\t\t\t\t\t\t");

							}
							
      out.write("\n");
      out.write("\t\t\t\t\t\t\t<div class=\"col-md-3\">\n");
      out.write("\t\t\t\t\t\t\t<p>\n");
      out.write("\t\t\t\t\t\t\t\t<strong>");
      out.print(newCategory);
      out.write("</strong>\n");
      out.write("\t\t\t\t\t\t\t</p>\n");
      out.write("\t\t\t\t\t\t\t");

						}
						
      out.write("\n");
      out.write("\t\t\t\t\t\t<div class=\"row\">\n");
      out.write("\t\t\t\t\t\t\t<div class=\"checkbox\">\n");
      out.write("\t\t\t\t\t\t\t\t<input type=\"checkbox\" name=\"");
      out.print(col.value);
      out.write("\"\n");
      out.write("\t\t\t\t\t\t\t\t\tonclick=\"var input = document.getElementById('score-");
      out.print(col.value);
      out.write("'); if(this.checked){ input.disabled = false; input.value = 0; input.focus();}else{input.disabled=true; input.value=''}\" />\n");
      out.write("\t\t\t\t\t\t\t\t\t");
      out.print(attribute);
      out.write("\n");
      out.write("\t\t\t\t\t\t\t\t<input id=\"score-");
      out.print(col.value);
      out.write("\" name=\"score-");
      out.print(col.value);
      out.write("\"\n");
      out.write("\t\t\t\t\t\t\t\t\tdisabled=\"disabled\" />\n");
      out.write("\t\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t</div>\n");
      out.write("\t\t\t\t\t\t");

					} 
				}
				
      out.write("\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t\t<div class=\"row\">\n");
      out.write("\t\t\t\t<div class=\"col-md-6\">\n");
      out.write("\t\t\t\t\t<label for=\"year-input\">Year</label>\n");
      out.write("     \t\t \t\t<select class=\"form-control input-sm\" id=\"year-input\" name=\"year-input\" form=\"setup-form\">\n");
      out.write("        \t\t\t\t<option>2015</option>\n");
      out.write("        \t\t\t\t<option>2014</option>\n");
      out.write("        \t\t\t\t<option>2013</option>\n");
      out.write("      \t\t\t\t</select>\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t\t<div class=\"col-md-2\">\n");
      out.write("\t\t\t\t\t<input class=\"btn-info\" type=\"submit\" name=\"submit\" value=\"Submit\" />\n");
      out.write("\t\t\t\t</div>\n");
      out.write("\t\t\t</div>\n");
      out.write("\t\t</form>\n");
      out.write("\t</div>\n");
      out.write("\n");
      out.write("\t<script src=\"/resources/js/nfl/setup.js\"></script>\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/footer.jsp", out, false);
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
